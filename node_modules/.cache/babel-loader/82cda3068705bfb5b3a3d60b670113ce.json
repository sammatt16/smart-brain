{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samat\\\\Desktop\\\\Udemy\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Modal from './components/Modal/Modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst particlesOptions = {\n  //customize this to your liking\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'home',\n  isSignedIn: true,\n  isProfileOpen: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return data.outputs[0].data.regions.map(face => {\n        const clarifaiFace = face.region_info.bounding_box;\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - clarifaiFace.right_col * width,\n          bottomRow: height - clarifaiFace.bottom_row * height\n        };\n      });\n    };\n\n    this.displayFaceBox = boxes => {\n      this.setState({\n        boxes: boxes\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        return this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.toggleModal = () => {\n      this.setState(prevState({ ...prevState,\n        isProfileOpen: !prevState.isProfileOpen\n      }));\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      boxes,\n      isProfileOpen\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), isProfileOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        children: /*#__PURE__*/_jsxDEV(Profile, {\n          isProfileOpen: isProfileOpen,\n          toggleModal: this.toggleModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: boxes,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/samat/Desktop/Udemy/smart-brain/src/App.js"],"names":["React","Component","Particles","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","Modal","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","boxes","route","isSignedIn","isProfileOpen","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","image","document","getElementById","width","Number","height","outputs","regions","map","face","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","toggleModal","prevState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport Modal from  './components/Modal/Modal';\r\nimport './App.css';\r\n\r\nconst particlesOptions = {\r\n  //customize this to your liking\r\n  particles: {\r\n    number: {\r\n      value: 30,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  boxes: [],\r\n  route: 'home',\r\n  isSignedIn: true,\r\n  isProfileOpen: false,\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({user: {\r\n      id: data.id,\r\n      name: data.name,\r\n      email: data.email,\r\n      entries: data.entries,\r\n      joined: data.joined\r\n    }})\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return data.outputs[0].data.regions.map (face => {\r\n      const clarifaiFace = face.region_info.bounding_box;\r\n      return{\r\n        leftCol: clarifaiFace.left_col * width,\r\n        topRow: clarifaiFace.top_row * height,\r\n        rightCol: width - (clarifaiFace.right_col * width),\r\n        bottomRow: height - (clarifaiFace.bottom_row * height)\r\n      }\r\n    });\r\n  }\r\n\r\n  displayFaceBox = (boxes) => {\r\n    this.setState({boxes: boxes});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({imageUrl: this.state.input});\r\n      fetch('http://localhost:3000/imageurl', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          input: this.state.input\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response) {\r\n          fetch('http://localhost:3000/image', {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              id: this.state.user.id\r\n            })\r\n          })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { entries: count}))\r\n            })\r\n            .catch(console.log)\r\n\r\n        }\r\n        this.displayFaceBox(this.calculateFaceLocation(response))\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      return this.setState(initialState)\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState({\r\n      ...prevState,\r\n      isProfileOpen: !prevState.isProfileOpen\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, boxes, isProfileOpen } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n         <Particles className='particles'\r\n          params={particlesOptions}\r\n        />\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\r\n        { isProfileOpen && \r\n          <Modal>\r\n            <Profile isProfileOpen={isProfileOpen} toggleModal={this.toggleModal} />\r\n          </Modal> \r\n        }\r\n        { route === 'home'\r\n          ? <div>\r\n              <Logo />\r\n              <Rank\r\n                name={this.state.user.name}\r\n                entries={this.state.user.entries}\r\n              />\r\n              <ImageLinkForm\r\n                onInputChange={this.onInputChange}\r\n                onButtonSubmit={this.onButtonSubmit}\r\n              />\r\n              <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\r\n            </div>\r\n          : (\r\n             route === 'signin'\r\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}